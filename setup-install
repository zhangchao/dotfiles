#!/usr/bin/env bash
# Usage: ./setup-install

set -e
[ -n "$DOTFILES_DEBUG" ] && set -x

# Global vars.
HOME=${HOME}
EXEC_PATH=${PWD}
VUNDLE_PATH="${HOME}/.vim/Vundle.vim"

# Check bash version.
check_bash_version()
{
    local current_version=${BASH_VERSION:0:1}
    if [ current_version < 4 ]; then
        echo "ERROR: The version of your bash must be greater than 4.0!"
        exit 1
    fi
}

# Pre check.
check_essential_softwares()
{
    local essentials=("vim" "git" "tmux" "npm")
    for e in "${essentials[@]}"
    do
        type ${e} 2>&1 > /dev/null
        if [ "$?" -ne 0 ]; then
            echo "ERROR: **${e}** is not installed!"
            exit 1
        fi
        echo "Checking ${e}...ok"
    done
    echo
}

create_softlinks()
{
    # Check dash.vim support before symlink creation.
    local system=$(uname)
    if [ ${system} != "Darwin" ]; then
        echo "dash.vim is not supported on your ${system}, remove it from .vimrc..."
        sed -i "/Plugin 'rizzatti\/dash\.vim/d" .vimrc
    fi

    local dotfiles=(".pip" ".vimrc" ".gitconfig" ".tmux.conf" ".bashrc")
    for dotfile in "${dotfiles[@]}"
    do
        ln -sf "${EXEC_PATH}/${dotfile}" "${HOME}/${dotfile}"
        echo "Create symlink ${HOME}/${dotfile}"
    done
}

install_plugins_online()
{
    # Install vundle at first.
    if [ -d "${VUNDLE_PATH}" ]; then
        echo "${VUNDLE_PATH} already exits. Updating..."
        cd "${VUNDLE_PATH}"
        git pull
        cd - > /dev/null 2>&1
    else
        echo "${VUNDLE_PATH} not exists. Downloading..."
        git clone https://github.com/gmarik/Vundle.vim.git ${VUNDLE_PATH}
    fi

    # Install instant-markdown-d for instant markdown preview.
    echo "Installing instant-markdown for instant markdown preview..."
    npm -g intall instant-markdown-d > /dev/null 2>&1 

    # Install plugins.
    echo "Installing vim plugins..."
    vim +PluginInstall +qall
}


main()
{
    check_bash_version
    check_essential_softwares
    create_softlinks
    install_plugins_online
}

# Run script.
RUNNING=$(basename $0)
[ "$RUNNING" = "setup-install" ] && main $1

